{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":[],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport createFragment from 'react-addons-create-fragment';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    hrefBuilder           : PropTypes.func,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : \"selected\",\n    previousClassName     : \"previous\",\n    nextClassName         : \"next\",\n    previousLabel         : \"Previous\",\n    nextLabel             : \"Next\",\n    breakLabel            : \"...\",\n    disabledClassName     : \"disabled\",\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage :\n                props.forcePage   ? props.forcePage :\n                0\n    };\n  }\n\n  componentDidMount() {\n    const { initialPage, disableInitialCallback } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof(initialPage) !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage});\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({selected: selected});\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\n        typeof(this.props.onPageChange) === \"function\") {\n      this.props.onPageChange({selected: selectedItem});\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      extraAriaContext\n    } = this.props;\n\n    return <PageView\n      onClick={this.handlePageSelected.bind(null, index)}\n      selected={selected === index}\n      pageClassName={pageClassName}\n      pageLinkClassName={pageLinkClassName}\n      activeClassName={activeClassName}\n      extraAriaContext={extraAriaContext}\n      href={this.hrefBuilder(index)}\n      page={index + 1} />\n  }\n\n  pagination = () => {\n    let items = {};\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n\n      for (let index = 0; index < pageCount; index++) {\n        items['key' + index] = this.getPageElement(index);\n      }\n\n    } else {\n\n      let leftSide  = (pageRangeDisplayed / 2);\n      let rightSide = (pageRangeDisplayed - leftSide);\n\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide  = pageRangeDisplayed - rightSide;\n      }\n      else if (selected < pageRangeDisplayed / 2) {\n        leftSide  = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n\n        page = index + 1;\n\n        if (page <= marginPagesDisplayed) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        if (page > pageCount - marginPagesDisplayed) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        if ((index >= selected - leftSide) && (index <= selected + rightSide)) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (breakLabel && breakLabelValue !== breakView) {\n          breakView = (\n            <BreakView\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n            />\n          );\n\n          items['key' + index] = breakView;\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel\n    } = this.props;\n\n    const { selected } = this.state;\n    \n    let disabled = disabledClassName;\n    const previousClasses = classNames(previousClassName,\n                                       {[disabled]: selected === 0});\n\n    const nextClasses = classNames(nextClassName,\n                                   {[disabled]: selected === pageCount - 1});\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a onClick={this.handlePreviousPage}\n             className={previousLinkClassName}\n             href={this.hrefBuilder(selected - 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handlePreviousPage}>\n            {previousLabel}\n          </a>\n        </li>\n\n        {createFragment(this.pagination())}\n\n        <li className={nextClasses}>\n          <a onClick={this.handleNextPage}\n             className={nextLinkClassName}\n             href={this.hrefBuilder(selected + 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handleNextPage}>\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n};\n"]}
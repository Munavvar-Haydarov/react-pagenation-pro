{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","evt","selected","state","preventDefault","returnValue","handlePageSelected","pageCount","setState","callCallback","index","getForwardJump","getBackwardJump","selectedItem","onPageChange","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","length","handleBreakClick","bind","initialSelected","initialPage","forcePage","disableInitialCallback","extraAriaContext","console","warn","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","disabledClassName","containerClassName","previousLabel","previousClassName","previousLinkClassName","previousAriaLabel","nextLabel","nextClassName","nextLinkClassName","nextAriaLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","handlePreviousPage","pagination","handleNextPage","Component","PropTypes","number","isRequired","node","string","oneOfType","func","bool"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = (evt) => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = (evt) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      pageCount,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n"],"file":"PaginationBoxView.js"}
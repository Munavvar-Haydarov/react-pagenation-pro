{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","selected","state","evt","preventDefault","returnValue","handlePageSelected","handleNextPage","pageCount","setState","callCallback","handleBreakClick","index","getForwardJump","getBackwardJump","onPageChange","selectedItem","pagination","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","length","bind","initialSelected","initialPage","forcePage","disableInitialCallback","nextProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","extraAriaContext","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","Component","propTypes","PropTypes","number","isRequired","node","oneOfType","string","func","bool","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageView from './PageView';\r\nimport BreakView from './BreakView';\r\n\r\nexport default class PaginationBoxView extends Component {\r\n  static propTypes = {\r\n    pageCount: PropTypes.number.isRequired,\r\n    pageRangeDisplayed: PropTypes.number.isRequired,\r\n    marginPagesDisplayed: PropTypes.number.isRequired,\r\n    previousLabel: PropTypes.node,\r\n    nextLabel: PropTypes.node,\r\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n    hrefBuilder: PropTypes.func,\r\n    onPageChange: PropTypes.func,\r\n    initialPage: PropTypes.number,\r\n    forcePage: PropTypes.number,\r\n    disableInitialCallback: PropTypes.bool,\r\n    containerClassName: PropTypes.string,\r\n    pageClassName: PropTypes.string,\r\n    pageLinkClassName: PropTypes.string,\r\n    activeClassName: PropTypes.string,\r\n    activeLinkClassName: PropTypes.string,\r\n    previousClassName: PropTypes.string,\r\n    nextClassName: PropTypes.string,\r\n    previousLinkClassName: PropTypes.string,\r\n    nextLinkClassName: PropTypes.string,\r\n    disabledClassName: PropTypes.string,\r\n    breakClassName: PropTypes.string,\r\n    breakLinkClassName: PropTypes.string,\r\n    extraAriaContext: PropTypes.string,\r\n    ariaLabelBuilder: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    pageCount: 10,\r\n    pageRangeDisplayed: 2,\r\n    marginPagesDisplayed: 3,\r\n    activeClassName: 'selected',\r\n    previousClassName: 'previous',\r\n    nextClassName: 'next',\r\n    previousLabel: 'Previous',\r\n    nextLabel: 'Next',\r\n    breakLabel: '...',\r\n    disabledClassName: 'disabled',\r\n    disableInitialCallback: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let initialSelected;\r\n    if (props.initialPage) {\r\n      initialSelected = props.initialPage;\r\n    } else if (props.forcePage) {\r\n      initialSelected = props.forcePage;\r\n    } else {\r\n      initialSelected = 0;\r\n    }\r\n\r\n    this.state = {\r\n      selected: initialSelected,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { initialPage, disableInitialCallback } = this.props;\r\n    // Call the callback with the initialPage item:\r\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\r\n      this.callCallback(initialPage);\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      typeof nextProps.forcePage !== 'undefined' &&\r\n      this.props.forcePage !== nextProps.forcePage\r\n    ) {\r\n      this.setState({ selected: nextProps.forcePage });\r\n    }\r\n  }\r\n\r\n  handlePreviousPage = evt => {\r\n    const { selected } = this.state;\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n    if (selected > 0) {\r\n      this.handlePageSelected(selected - 1, evt);\r\n    }\r\n  };\r\n\r\n  handleNextPage = evt => {\r\n    const { selected } = this.state;\r\n    const { pageCount } = this.props;\r\n\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n    if (selected < pageCount - 1) {\r\n      this.handlePageSelected(selected + 1, evt);\r\n    }\r\n  };\r\n\r\n  handlePageSelected = (selected, evt) => {\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n\r\n    if (this.state.selected === selected) return;\r\n\r\n    this.setState({ selected: selected });\r\n\r\n    // Call the callback with the new selected item:\r\n    this.callCallback(selected);\r\n  };\r\n\r\n  getForwardJump() {\r\n    const { selected } = this.state;\r\n    const { pageCount, pageRangeDisplayed } = this.props;\r\n\r\n    const forwardJump = selected + pageRangeDisplayed;\r\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\r\n  }\r\n\r\n  getBackwardJump() {\r\n    const { selected } = this.state;\r\n    const { pageRangeDisplayed } = this.props;\r\n\r\n    const backwardJump = selected - pageRangeDisplayed;\r\n    return backwardJump < 0 ? 0 : backwardJump;\r\n  }\r\n\r\n  handleBreakClick = (index, evt) => {\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n\r\n    const { selected } = this.state;\r\n\r\n    this.handlePageSelected(\r\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\r\n      evt\r\n    );\r\n  };\r\n\r\n  hrefBuilder(pageIndex) {\r\n    const { hrefBuilder, pageCount } = this.props;\r\n    if (\r\n      hrefBuilder &&\r\n      pageIndex !== this.state.selected &&\r\n      pageIndex >= 0 &&\r\n      pageIndex < pageCount\r\n    ) {\r\n      return hrefBuilder(pageIndex + 1);\r\n    }\r\n  }\r\n\r\n  ariaLabelBuilder(pageIndex) {\r\n    const selected = pageIndex === this.state.selected;\r\n    if (this.props.ariaLabelBuilder &&\r\n      pageIndex >= 0 &&\r\n      pageIndex < this.props.pageCount) {\r\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\r\n      // perhaps deprecate warning in future?\r\n      if (this.props.extraAriaContext && !selected) {\r\n        label = label + ' ' + this.props.extraAriaContext;\r\n      }\r\n      return label;\r\n    }\r\n  }\r\n\r\n  callCallback = selectedItem => {\r\n    if (\r\n      typeof this.props.onPageChange !== 'undefined' &&\r\n      typeof this.props.onPageChange === 'function'\r\n    ) {\r\n      this.props.onPageChange({ selected: selectedItem });\r\n    }\r\n  };\r\n\r\n  getPageElement(index) {\r\n    const { selected } = this.state;\r\n    const {\r\n      pageClassName,\r\n      pageLinkClassName,\r\n      activeClassName,\r\n      activeLinkClassName,\r\n      extraAriaContext,\r\n    } = this.props;\r\n\r\n    return (\r\n      <PageView\r\n        key={index}\r\n        onClick={this.handlePageSelected.bind(null, index)}\r\n        selected={selected === index}\r\n        pageClassName={pageClassName}\r\n        pageLinkClassName={pageLinkClassName}\r\n        activeClassName={activeClassName}\r\n        activeLinkClassName={activeLinkClassName}\r\n        extraAriaContext={extraAriaContext}\r\n        href={this.hrefBuilder(index)}\r\n        ariaLabel={this.ariaLabelBuilder(index)}\r\n        page={index + 1}\r\n      />\r\n    );\r\n  }\r\n\r\n  pagination = () => {\r\n    const items = [];\r\n    const {\r\n      pageRangeDisplayed,\r\n      pageCount,\r\n      marginPagesDisplayed,\r\n      breakLabel,\r\n      breakClassName,\r\n      breakLinkClassName,\r\n    } = this.props;\r\n\r\n    const { selected } = this.state;\r\n\r\n    if (pageCount <= pageRangeDisplayed) {\r\n      for (let index = 0; index < pageCount; index++) {\r\n        items.push(this.getPageElement(index));\r\n      }\r\n    } else {\r\n      let leftSide = pageRangeDisplayed / 2;\r\n      let rightSide = pageRangeDisplayed - leftSide;\r\n\r\n      // If the selected page index is on the default right side of the pagination,\r\n      // we consider that the new right side is made up of it (= only one break element).\r\n      // If the selected page index is on the default left side of the pagination,\r\n      // we consider that the new left side is made up of it (= only one break element).\r\n      if (selected > pageCount - pageRangeDisplayed / 2) {\r\n        rightSide = pageCount - selected;\r\n        leftSide = pageRangeDisplayed - rightSide;\r\n      } else if (selected < pageRangeDisplayed / 2) {\r\n        leftSide = selected;\r\n        rightSide = pageRangeDisplayed - leftSide;\r\n      }\r\n\r\n      let index;\r\n      let page;\r\n      let breakView;\r\n      let createPageView = index => this.getPageElement(index);\r\n\r\n      for (index = 0; index < pageCount; index++) {\r\n        page = index + 1;\r\n\r\n        // If the page index is lower than the margin defined,\r\n        // the page has to be displayed on the left side of\r\n        // the pagination.\r\n        if (page <= marginPagesDisplayed) {\r\n          items.push(createPageView(index));\r\n          continue;\r\n        }\r\n\r\n        // If the page index is greater than the page count\r\n        // minus the margin defined, the page has to be\r\n        // displayed on the right side of the pagination.\r\n        if (page > pageCount - marginPagesDisplayed) {\r\n          items.push(createPageView(index));\r\n          continue;\r\n        }\r\n\r\n        // If the page index is near the selected page index\r\n        // and inside the defined range (pageRangeDisplayed)\r\n        // we have to display it (it will create the center\r\n        // part of the pagination).\r\n        if (index >= selected - leftSide && index <= selected + rightSide) {\r\n          items.push(createPageView(index));\r\n          continue;\r\n        }\r\n\r\n        // If the page index doesn't meet any of the conditions above,\r\n        // we check if the last item of the current \"items\" array\r\n        // is a break element. If not, we add a break element, else,\r\n        // we do nothing (because we don't want to display the page).\r\n        if (breakLabel && items[items.length - 1] !== breakView) {\r\n          breakView = (\r\n            <BreakView\r\n              key={index}\r\n              breakLabel={breakLabel}\r\n              breakClassName={breakClassName}\r\n              breakLinkClassName={breakLinkClassName}\r\n              onClick={this.handleBreakClick.bind(null, index)}\r\n            />\r\n          );\r\n          items.push(breakView);\r\n        }\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      disabledClassName,\r\n      previousClassName,\r\n      nextClassName,\r\n      pageCount,\r\n      containerClassName,\r\n      previousLinkClassName,\r\n      previousLabel,\r\n      nextLinkClassName,\r\n      nextLabel,\r\n    } = this.props;\r\n\r\n    const { selected } = this.state;\r\n\r\n    const previousClasses =\r\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\r\n    const nextClasses =\r\n      nextClassName +\r\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\r\n\r\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\r\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\r\n\r\n    return (\r\n      <ul className={containerClassName}>\r\n        <li className={previousClasses}>\r\n          <a\r\n            onClick={this.handlePreviousPage}\r\n            className={previousLinkClassName}\r\n            href={this.hrefBuilder(selected - 1)}\r\n            tabIndex=\"0\"\r\n            role=\"button\"\r\n            onKeyPress={this.handlePreviousPage}\r\n            aria-disabled={previousAriaDisabled}\r\n          >\r\n            {previousLabel}\r\n          </a>\r\n        </li>\r\n\r\n        {this.pagination()}\r\n\r\n        <li className={nextClasses}>\r\n          <a\r\n            onClick={this.handleNextPage}\r\n            className={nextLinkClassName}\r\n            href={this.hrefBuilder(selected + 1)}\r\n            tabIndex=\"0\"\r\n            role=\"button\"\r\n            onKeyPress={this.handleNextPage}\r\n            aria-disabled={nextAriaDisabled}\r\n          >\r\n            {nextLabel}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n"]}